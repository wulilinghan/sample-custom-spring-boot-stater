<?xml version="1.0" encoding="UTF-8"?>
<!--
    scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
    scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。
                当scan为true时，此属性生效。默认的时间间隔为1分钟。
    debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <!-- 定义常量 -->
    <property name="log.dir" value="./logs" />
    <property name="encoding" value="UTF-8" />

    <!--格式化输出：%d表示日期，%-5level：级别从左显示5个字符宽度，%thread表示线程名，%logger{50}类名超过50显示简缩写，msg：日志消息，%n是换行符-->
    <!-- [TraceId-%X{TraceId}] 获取MDC中的traceId -->
    <property name="layout"
              value="[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level [%thread] [TraceId-%X{TraceId}] %logger{50} - %msg%n"/>
    <property name="maxHistory" value="30"/>
    <property name="maxFileSize" value="50MB"/>

    <!-- 控制台输出日志 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${layout}</pattern>
        </encoder>
    </appender>

    <!-- 日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.dir}/main.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${log.dir}/main_%d{yyyy-MM-dd}_%i.log</FileNamePattern>
            <MaxHistory>${maxHistory}</MaxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${maxFileSize}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${layout}</pattern>
        </encoder>
    </appender>

    <!-- 错误日志 -->
    <appender name="ERROR-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.dir}/error.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- error日志文件 -->
            <FileNamePattern>${log.dir}/error_%d{yyyy-MM-dd}_%i.log</FileNamePattern>
            <MaxHistory>${maxHistory}</MaxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${maxFileSize}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${layout}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="log-async" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="FILE"/>
    </appender>

    <!-- 日志输出级别 -->
    <!--TRACE\DEBUG\INFO\WARN\ERROR\FATAL\OFF-->
    <root level="INFO">
        <appender-ref ref="console"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="ERROR-FILE"/>
        <appender-ref ref="log-async"/>
    </root>

</configuration>
